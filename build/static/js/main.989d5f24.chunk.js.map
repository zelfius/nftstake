{"version":3,"sources":["web3.js","components/App.js","serviceWorker.js","index.js"],"names":["web3","window","Web3","currentProvider","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","ethereum","enable","t0","alert","stop","App","_useState","useState","_useState2","slicedToArray","airNft","setAirNft","_useState3","_useState4","stakeTokens","setStakeTokens","_useState5","_useState6","mtx","setMtx","_useState7","_useState8","tokenInput","setTokenInput","loadWeb3","_ref","apply","this","arguments","loadBlockchainData","_ref2","_callee2","networkId","abi","abi2","contract_staking","bscNetwork","contract_airnft","_context2","eth","net","getId","sent","console","log","contrato_token","contrato_staking","Contract","providers","HttpProvider","timeout","AddToken","_ref3","_callee3","accountsBnb","response","accounts","_context3","getAccounts","methods","transferFrom","send","from","StartStaking","ReturnToken","_ref4","_callee4","account","_context4","ReturnTokens","call","ViewTokenBalance","_ref5","_callee5","_context5","ViewMTXBalance","LoadingAll","_ref6","_callee6","_context6","useEffect","react_default","createElement","style","width","minHeight","height","display","flexFlow","alignItems","backgroundColor","color","margin","marginTop","fontSize","onClick","justifyContent","border","borderRadius","paddingLeft","placeholder","type","onChange","event","target","value","padding","textAlign","position","left","src","allowtransparency","frameborder","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.989d5f24.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nlet web3\n\nif(window.web3) {\n    web3 = new Web3(window.web3.currentProvider);\n}\n\nwindow.addEventListener(\"load\", async () => {\n    if(window.ethereum) {\n        window.web3 = new Web3 (window.ethereum);\n    try {\n        await window.ethereum.enable();\n    } catch(error){\n        alert('User denied account access...')\n        }\n    }\n    else if (window.web3) {\n        window.web3 = new Web3(web3.currentProvider); \n    }\n    else {\n        alert('Non-Ethereum browser detected. You should trying Metamask!');\n    }\n\n})\n\nexport default web3;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Web3 from 'web3'\nimport web3 from '../web3'\nimport contrato_token from '../abis/airnft.json'\nimport contrato_staking from '../abis/StakingToken.json'\n\nconst App = () =>{ \n\n  const [airNft, setAirNft] = useState(null)\n  const [stakeTokens, setStakeTokens] = useState(null)\n\n  const [mtx, setMtx] = useState(0)\n  const [tokenInput, setTokenInput] = useState('')\n\n\n\n\n  const loadWeb3 = async() => {\n    if(window.ethereum) {\n      window.web3 = new Web3 (window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3 (window.web3.currentProvider)\n    }\n    else{\n      window.alert('Non ethereum browser detected. You should consider trying Metamask!')\n    }\n  }\n\n  // Carga de los datos de la Blockchain\n\n  const loadBlockchainData = async() => {\n    const web3 = window.web3\n    \n    // Carga de la cuenta\n\n    const networkId = await web3.eth.net.getId() // Rinkeby -> 4 , Ganache -> 5777\n    console.log(networkId)\n    const abi = contrato_token\n    const abi2 = contrato_staking.abi\n    const contract_staking = new window.web3.eth.Contract(abi2, '0xC0943eDe2d054e989e4dE710A0AD05054c7f6B3f')\n    setStakeTokens(contract_staking)\n    const bscNetwork = new Web3(new Web3.providers.HttpProvider('https://speedy-nodes-nyc.moralis.io/86e07899239413ba6bd31884/bsc/mainnet/archive',{ timeout: 10000 }))\n    const contract_airnft = new bscNetwork.eth.Contract(abi, '0xF5db804101d8600c26598A1Ba465166c33CdAA4b')\n    setAirNft(contract_airnft)\n    \n  }\n\n\n  const AddToken = async()=> {\n    const bscNetwork = new Web3(new Web3.providers.HttpProvider('https://speedy-nodes-nyc.moralis.io/86e07899239413ba6bd31884/bsc/mainnet/archive',{ timeout: 10000 }))\n    const accountsBnb = await window.web3.eth.getAccounts()\n    const response = await airNft.methods.transferFrom(accountsBnb[0],'0x8309e94F8C1b97303DD320C9de4245cb4725f0eB', tokenInput).send({from:accountsBnb[0]})\n    console.log(\"R\",response)\n    if(response) {\n      const accounts = await web3.eth.getAccounts()\n      const abi2 = contrato_staking.abi\n      const contract_staking = new window.web3.eth.Contract(abi2, '0xC0943eDe2d054e989e4dE710A0AD05054c7f6B3f')\n      const addTokens = await contract_staking.methods.StartStaking(accounts[0],tokenInput).send({from: accounts[0]})\n      if(addTokens) {\n        console.log(\"Token added\")\n      }\n    }\n  }\n\n\n\n  const ReturnToken = async()=>{\n    const accounts = await window.web3.eth.getAccounts()\n    const account = accounts[0]\n    const response = await stakeTokens.methods.ReturnTokens().call({from:account})\n    console.log(response)\n  }\n\n  const ViewTokenBalance = async()=>{\n    const abi2 = contrato_staking.abi\n    const contract_staking = new window.web3.eth.Contract(abi2, '0xC0943eDe2d054e989e4dE710A0AD05054c7f6B3f')\n    const accounts = await window.web3.eth.getAccounts()\n    const account = accounts[0]\n    const response = await contract_staking.methods.ViewMTXBalance().call({from: account})\n    if (response == null) {\n      setMtx(0)\n    } else {\n      setMtx(response)\n    }\n\n  }\n\n  const LoadingAll = async() => {\n    await loadWeb3()\n    await loadBlockchainData()\n    await ViewTokenBalance()\n    //await ViewTokens()\n  }\n\n  useEffect(() => {\n    LoadingAll()\n  },[])\n  \n  return (\n    <div style = {{width:'100%',minHeight:'900px', height:'100%', display:'flex', flexFlow:'column',alignItems:'center', backgroundColor:'#FF8C0E'}}>\n      <h1 style = {{color:'white', margin:'0 auto', marginTop:'50px', fontSize:'55px'}} onClick = {()=>{ReturnToken()}}>STAKE NOW</h1>\n      <div style = {{width:'50%', height:'150px', display:'flex',flexFlow:'row', justifyContent:'space-between', margin:'0 auto' }}>\n        <input style = {{width:'250px', height:'50px', marginTop:'100px',border:'none', borderRadius:'10px', paddingLeft:'45px'}} placeholder = \"Paste here your NFTID\" type = \"text\" onChange={(event)=>{setTokenInput(event.target.value)}} />\n        <button style = {{width:'250px', height:'50px', backgroundColor:'#3E3F5E', marginTop:'100px', color:'white', border:'none',fontSize:'20px', borderRadius:'10px'}} onClick = {()=>{AddToken()}}>Stake your NFT</button>\n      </div>\n      <div style = {{width:'50%', height:'50px', display:'flex',flexFlow:'row', justifyContent:'space-between', margin:'0 auto' }}>\n        <p style = {{color:'white', fontSize:'10px', marginTop:'18px'}}>*You can find the NFTID in the \"info\" section on AIRNFT</p>\n        <p></p>\n      </div>\n      <h5 style = {{color:'white', fontSize:'30px', marginTop:'25px'}}>YOUR REWARDS:</h5>\n      <h5 style = {{color:'white', fontSize:'30px', marginTop:'5px',borderRadius:'10px', border:'2px solid white', width:'220px', height:'50px', padding:'5px', textAlign:'center', }}>{mtx} MTX</h5>\n      <p style = {{color:'white', fontSize:'10px'}}>*It will automatically refresh every 24h</p>\n      <h5 style = {{color:'white', fontSize:'30px', marginTop:'10px'}}>You can claim your NFTs and rewards in:</h5>\n      <iframe style = {{ margin:'0 auto',marginTop:'10px',position:'relative', left:'20px'}} src=\"https://free.timeanddate.com/countdown/i89bzlr1/cf12/cm0/cu4/ct0/cs0/ca0/co0/cr0/ss0/cacfff/cpc000/pct/tcfff/fs100/szw576/szh243/iso2022-08-31T00:00:00\" allowtransparency=\"true\" frameborder=\"0\" width=\"217\" height=\"52\"></iframe>\n    </div>\n  );\n  \n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}